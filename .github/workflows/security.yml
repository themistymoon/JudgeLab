name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: [api, web, worker]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js (for web)
      if: matrix.component == 'web'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Setup Python (for api and worker)
      if: matrix.component != 'web'
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    # Node.js dependency scan
    - name: Run npm audit (web)
      if: matrix.component == 'web'
      run: |
        cd apps/web
        npm audit --audit-level moderate
    
    # Python dependency scan
    - name: Install safety
      if: matrix.component != 'web'
      run: pip install safety
    
    - name: Run safety check
      if: matrix.component != 'web'
      run: |
        cd ${{ matrix.component == 'api' && 'apps/api' || 'worker' }}
        safety check -r requirements.txt

  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
        head: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        extra_args: --debug --only-verified

  container-scan:
    runs-on: ubuntu-latest
    needs: [dependency-scan]
    if: false  # Disabled for local-only setup
    
    strategy:
      matrix:
        component: [api, worker]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Build image
      run: |
        cd ${{ matrix.component == 'api' && 'apps/api' || 'worker' }}
        docker build -t judgelab-${{ matrix.component }}:test .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'judgelab-${{ matrix.component }}:test'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  code-quality:
    runs-on: ubuntu-latest
    if: false  # Disabled for local development setup
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: SonarCloud Scan (Disabled)
      run: echo "SonarCloud scan disabled - requires SONAR_TOKEN secret"